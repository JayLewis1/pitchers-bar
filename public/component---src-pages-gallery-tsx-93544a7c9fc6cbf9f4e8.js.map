{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/home/GalleryPopup.tsx","webpack://gatsby-starter-default/./src/pages/gallery.tsx"],"names":["connector","connect","state","gallery","toggleGallery","payload","type","index","from","useState","imgIndex","setImgIndex","className","src","alt","onClick","newIndex","id","console","log","url","loaded","galleryImages","setImgageUrls","useEffect","populateWithImgUrls","imgUrlArray","x","newObject","push","title","map","img","key","style","minHeight","display","onLoad","editableArray","loadedObject","length","indexOf","splice","setLoadedImg","imgUrl","openImagePopup","toggle"],"mappings":"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","file":"component---src-pages-gallery-tsx-93544a7c9fc6cbf9f4e8.js","sourcesContent":["import React, { useState } from 'react'\n//Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  gallery: {\n    toggle: boolean\n  }\n}\n\nconst mapState = (state:ComponentProps ) => ({\n  gallery: state.gallery\n})\n\nconst mapDispatch = {\n  toggleGallery : (payload: boolean) => ({type: \"TOGGLE_GALLERY\", payload: payload})\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux & {\n  index : number \n  from: string\n}\n\nconst GalleryPopup = ({index, toggleGallery,from }:Props ) => {\n  const [imgIndex, setImgIndex] = useState(index);\n\n  const changeImgLeft = () => {\n      let newIndex = imgIndex - 1;\n      if(from === \"home\" && newIndex < 1) {\n        newIndex = 5;\n        setImgIndex(newIndex);\n      } else {\n        setImgIndex(newIndex);\n      }\n\n      if(from === \"gallery\" && newIndex < 1) {\n        newIndex = 29;\n        setImgIndex(newIndex);\n      } else {\n        setImgIndex(newIndex);\n      }\n  } \n  const changeImgRight = () => {\n    let newIndex = imgIndex + 1;\n    if(from === \"home\" && newIndex > 5) {\n      newIndex = 1;\n      setImgIndex(newIndex);\n    } else {\n      setImgIndex(newIndex);\n    }\n    if(from === \"gallery\" && newIndex > 29) {\n      newIndex = 1;\n      setImgIndex(newIndex);\n    } else {\n      setImgIndex(newIndex);\n    }\n  }\n  const exitGallery = () => {\n    console.log(\"exit gallery\");\n    toggleGallery(false)\n  }\n\n  return (\n    <div className=\"gallery-popup\">\n       { from === \"home\" &&  <img src={`/assets/photos/g${imgIndex}@2x.jpg`} alt=\"Gallery Item\"/>}\n          { from === \"gallery\" && <img src={`/assets/gallery/p${imgIndex}.jpg`} alt=\"Gallery Item\"/>}\n          <span className=\"button-wrapper\">\n          <button onClick={() => changeImgLeft()}>\n            <img src=\"/assets/icons/arrow.svg\" alt=\"Left arrow\"/>\n          </button>\n              <button id=\"exit-btn\" onClick={() => exitGallery()}>\n                  <span className=\"btn-bg\"></span>\n                  <p>Exit</p>\n              </button>\n              <button id=\"right-arrow\" onClick={() => changeImgRight()}>\n                <img src=\"/assets/icons/arrow.svg\" alt=\"Right arrow\"/>\n              </button>\n            </span>\n    </div>\n  )\n}\nexport default connector(GalleryPopup);","import React, { useState, useEffect } from \"react\"\n// Components\nimport Layout from \"../components/layout/layout\";\nimport SEO from \"../components/seo\"\nimport GalleryPopup from \"../components/home/GalleryPopup\";\n//Redux\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface ComponentProps {\n  gallery: {\n    toggle: boolean\n  }\n}\n\nconst mapState = (state:ComponentProps ) => ({\n  gallery: state.gallery\n})\n\nconst mapDispatch = {\n  toggleGallery : (payload: boolean) => ({type: \"TOGGLE_GALLERY\", payload: payload})\n}\n\nconst connector = connect(mapState, mapDispatch)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\ntype Props = PropsFromRedux\n\n\nconst Gallery = ({gallery, toggleGallery} : Props) => {\n  const [galleryImages, setImgageUrls] = useState([{url: \"\", loaded: false}])\n  const [imgIndex, setImgIndex] = useState(0);\n\n    useEffect(() => {\n    populateWithImgUrls()\n  },[])\n\n  const openImagePopup = (imgUrl: string) => {\n    let index: number;\n    for(let x = 0; x < galleryImages.length; x++) {\n        if(galleryImages[x].url === imgUrl) {\n          index = galleryImages.indexOf(galleryImages[x]);\n          setImgIndex(index+1);\n          toggleGallery(true);\n        } \n    }\n  }\n\n  const populateWithImgUrls = () => {\n    let imgUrlArray: any = []\n    for(let x = 1; x <= 29; x++ ){\n      let newObject = {\n        url : `/assets/gallery/p${x}.jpg`,\n        loaded: false \n      }\n      imgUrlArray.push(newObject)\n    }; \n    setImgageUrls(imgUrlArray)\n  }\n\n  const setLoadedImg = (img:any) => {\n    let editableArray = [...galleryImages];\n    let index: number;\n    let loadedObject = {\n      url : img.url,\n      loaded: true\n    }\n\n    for(var x = 0; x < editableArray.length; x++ ) {\n      if(editableArray[x].url === img.url ) {\n        index = editableArray.indexOf(editableArray[x])\n        editableArray.splice(index, 1, loadedObject)\n        setImgageUrls(editableArray);\n      }\n    }\n  }\nreturn (\n  <Layout>\n    <SEO title=\"Gallery\" />\n    <div className=\"gallery-container\">\n        <div className=\"wrapper\">\n          <h3>Pitchers photo gallery</h3>\n          <ul className=\"gallery-grid\">\n            { galleryImages && galleryImages.map((img) => \n            <li \n                key={img.url} className=\"gallery-image\"\n                style={img.loaded === true ? { minHeight: \"0\" } : { minHeight: \"200px\" }}>\n              <div  \n                className=\"img-placeholder\"\n                style={img.loaded === true ? { display: \"none\" } : { display: \"block\" }}></div>\n              <img \n                style={img.loaded === false ? { display: \"none\" } : { display: \"inline-block\" }}\n                src={img.url} alt=\"Gallery Item\"\n                onLoad={() => setLoadedImg(img)} /> \n              <span className=\"img-hover\">\n                <button className=\"gallery-link\"\n                  onClick={() => openImagePopup(img.url)} >\n                  <span className=\"btn-bg\"></span>\n                  <p>View photo</p>\n                 </button>\n              </span>\n             \n            </li>\n            )}\n          </ul> \n        </div>\n        { gallery.toggle === true &&\n           <GalleryPopup index={imgIndex} from={\"gallery\"}/> \n        }\n    </div>\n  </Layout>\n)\n} \n\nexport default connector(Gallery);\n"],"sourceRoot":""}