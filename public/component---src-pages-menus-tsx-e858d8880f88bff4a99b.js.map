{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/menus/MenuItem.tsx","webpack://gatsby-starter-default/./src/components/menus/MenuSection.tsx","webpack://gatsby-starter-default/./src/components/menus/Menu.tsx","webpack://gatsby-starter-default/./src/pages/menus.tsx"],"names":["name","description","price","vegetarian","className","items","map","item","key","sections","s","breakfastMenu","require","useState","menuSelection","setMenuSelection","title","onClick","Fragment","m"],"mappings":"g0EA2BA,EAlBkB,SAAC,GAA4D,IAA3DA,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,WAC5C,OACE,uBAAKC,UAAU,aACP,wBAAMA,UAAU,gBACE,KAAhBH,EACF,sBAAIG,UAAU,aAAaJ,GAC3B,sBAAII,UAAU,eAAeJ,GAE3BG,GACF,qBAAGC,UAAU,UAAb,KAEA,qBAAGA,UAAU,SAAb,IAAuBF,IAEzB,qBAAGE,UAAU,eAAeH,KCGtC,EAjBqB,SAAC,GAAmC,IAAlCD,EAAkC,EAAlCA,KAAMK,EAA4B,EAA5BA,MAC3B,OACI,uBAAKD,UAAU,gBACf,sBAAIA,UAAU,gBAAgBJ,GAC7BK,EAAMC,KAAI,SAACC,GAAD,OACT,gBAAC,EAAD,CACAC,IAAKD,EAAKP,KACVA,KAAMO,EAAKP,KACXE,MAAOK,EAAKL,MACZD,YAAaM,EAAKN,YAClBE,WAAYI,EAAKJ,kBCKzB,EAfc,SAAC,GAAsC,IAArCH,EAAqC,EAArCA,KAAMS,EAA+B,EAA/BA,SACpB,OACE,uBAAKL,UAAU,gBACf,sBAAIA,UAAU,aAAaJ,GAC1BS,EAASH,KAAI,SAACI,GAAD,OACZ,gBAAC,EAAD,CACAF,IAAKE,EAAEV,KACPA,KAAMU,EAAEV,KACRK,MAAOK,EAAEL,aCXTM,EAAiBC,EAAQ,MAuD/B,EArDc,WAAM,OACwBC,cAAS,aAA5CC,EADW,KACIC,EADJ,KAElB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,UACb,uBAAKZ,UAAU,mBACb,wBAAMA,UAAU,kBACZ,0BACEA,UAA6B,cAAlBU,EAAgC,WAAa,GACxDG,QAAS,kBAAMF,EAAiB,eAChC,wBAAMX,UAAU,WAChB,uCAEF,0BACEA,UAA6B,SAAlBU,EAA2B,WAAa,GACnDG,QAAS,kBAAMF,EAAiB,UAClC,wBAAMX,UAAU,WACd,uCAEF,0BACEA,UAA6B,WAAlBU,EAA6B,WAAa,GACrDG,QAAS,kBAAMF,EAAiB,YAClC,wBAAMX,UAAU,WACd,qCAOe,cAAlBU,GACH,gBAAC,EAAAI,SAAD,KACGP,EAAcL,KAAI,SAACa,GAAD,OACnB,gBAAC,EAAD,CAAMX,IAAKW,EAAEX,IAAKR,KAAMmB,EAAEnB,KAAMS,SAAUU,EAAEV,eAIzB,SAAlBK,GACD,uBAAKV,UAAU,gBACb,sBAAIA,UAAU,aAAd,cAGiB,WAAlBU,GACD,uBAAKV,UAAU,gBACb,sBAAIA,UAAU,aAAd","file":"component---src-pages-menus-tsx-e858d8880f88bff4a99b.js","sourcesContent":["import React, { Fragment } from 'react'\n\ninterface ComponentProps {\n name : string\n description: string\n price: string\n vegetarian: boolean\n}\n\n const MenuItem = ({name, description, price, vegetarian} :ComponentProps ) => {\n  return (\n    <div className=\"menu-item\">\n            <span className=\"name-wrapper\">\n            { description !== \"\" ?\n            <h4 className=\"item-name\">{name}</h4> :\n            <h4 className=\"description\">{name}</h4>\n            }\n            { vegetarian  &&\n            <p className=\"veggie\">v</p>\n            }\n            <p className=\"price\">Â£{price}</p>   \n          </span>\n          <p className=\"description\">{description}</p> \n    </div>\n  )\n}\n\nexport default MenuItem;","import React from 'react'\nimport MenuItem from \"./MenuItem\";\n\ninterface ComponentProps {\n name : string\n items: any\n}\n\n const MenuSection = ({name, items} :ComponentProps ) => {\n  return (\n      <div className=\"menu-section\">\n      <h3 className=\"section-name\">{name}</h3>\n      {items.map((item: any) => (\n        <MenuItem\n        key={item.name}\n        name={item.name}\n        price={item.price}\n        description={item.description}\n        vegetarian={item.vegetarian}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default MenuSection;","import React from 'react'\nimport MenuSection from \"./MenuSection\";\n\ninterface ComponentProps {\n name : string\n sections: any\n}\n\n const Menu = ({name, sections} :ComponentProps ) => {\n  return (\n    <div className=\"menu-wrapper\">\n    <h2 className=\"menu-name\">{name}</h2>\n    {sections.map((s: any)=> (\n      <MenuSection\n      key={s.name}\n      name={s.name}\n      items={s.items}\n      />\n    ))}\n  </div>\n  )\n}\n\nexport default Menu;","import React, { useState, useEffect, Fragment } from 'react'\nimport Layout from \"../components/layout/layout\";\nimport Seo from \"../components/seo\";\nimport Menu from \"../components/menus/Menu\";\n\nconst breakfastMenu =  require(\"../../menus/food/breakfast.json\");\n\nconst Menus = () => {\n  const [menuSelection, setMenuSelection] = useState(\"breakfast\");\n  return (\n    <Layout>\n      <Seo title=\"menus\" />\n    <div className=\"menus-container\">\n      <span className=\"menu-selection\">\n          <button \n            className={menuSelection === \"breakfast\" ? \"selected\" : \"\"}\n            onClick={() => setMenuSelection(\"breakfast\")} >\n            <span className=\"btn-bg\"></span>\n            <p>Breakfast</p>\n          </button>\n          <button \n            className={menuSelection === \"main\" ? \"selected\" : \"\"}\n            onClick={() => setMenuSelection(\"main\")} >\n          <span className=\"btn-bg\"></span>\n            <p>Main Menu</p>\n          </button>\n          <button\n            className={menuSelection === \"drinks\" ? \"selected\" : \"\"}\n            onClick={() => setMenuSelection(\"drinks\")} >\n          <span className=\"btn-bg\"></span>\n            <p>Drinks</p>\n          </button>\n      </span>\n      {/* <div className=\"menu-selection-wrapper\">\n        { menuSelection === \"food\" && <p>Food Menus</p> }\n        { menuSelection === \"drinks\" && <p>Drinks Menus</p> }\n      </div> */}\n      {  menuSelection === \"breakfast\" &&  \n      <Fragment>   \n        {breakfastMenu.map((m: any) => (\n        <Menu key={m.key} name={m.name} sections={m.sections} />\n       ))}\n      </Fragment> \n      }\n      {  menuSelection === \"main\" &&  \n        <div className=\"menu-wrapper\">\n          <h2 className=\"menu-name\">Main Menu</h2>\n        </div>\n      }\n      {  menuSelection === \"drinks\" &&  \n        <div className=\"menu-wrapper\">\n          <h2 className=\"menu-name\">Drinks</h2>\n        </div>\n      }\n \n    </div>\n    </Layout>\n  )\n}\n\nexport default Menus;"],"sourceRoot":""}